#pragma once 
#include "MessageIdentifiers.h"
enum 
{
	ID_MSG_C2S = ID_USER_PACKET_ENUM + 1 , // client to game server 
	ID_MSG_C2LOGIN,
	ID_MSG_C2GATE,
	ID_MSG_GATE2C,
	ID_MSG_C2GAME,
	ID_MSG_LOGIN2C,
	ID_MSG_LOGIN2DB,
	ID_MSG_DB2LOGIN,
	ID_MSG_GAME2C,
	ID_MSG_GM2GA,  // GM = game server , GA = gate server ;
	ID_MSG_GA2GM,
	ID_MSG_DB2GM,
	ID_MSG_GM2DB,
	ID_MSG_VERIFY,
	ID_MSG_TO_VERIFY_SERVER,
	ID_MSG_FROM_VERIFY_SERVER,
	ID_MSG_TO_APNS_SERVER,
	ID_MSG_TO_GM2LOG,
};

enum eMsgType 
{
	MSG_NONE,
	// the msg title used between servers 
	MSG_SERVERS_USE,
	MSG_VERIFY_GAME,  // verify that is game server ;
	MSG_VERIFY_LOGIN, // verify login server ;
	MSG_VERIFY_CLIENT, // verify that is client ;
	MSG_VERIFY_VERIYF, // verify buy transaction ok ;
	MSG_VERIFY_GATE, // verify that is gate server 
	MSG_VERIFY_DB,  // verify that is DBserver ;
	MSG_VERIFY_APNS, // apple push notification ;
	MSG_VERIFY_LOG, // LOG sever 
	MSG_TRANSER_DATA, // tranfer data between servers ;
	MSG_DISCONNECT_SERVER, 
	MSG_DISCONNECT_CLIENT,
	MSG_VERIFY_TANSACTION,
	MSG_APNS_INFO,   // send push notification ;
	MSG_PUSH_APNS_TOKEN,  // used for apns ; APPLE remote push notification ;
	// msg title used between server and client ;
	MSG_RECONNECT,   // client with gate 
	MSG_SAVE_PLAYER_COIN, // send to DB ;
	MSG_SAVE_DB_LOG, // save log inter log db ;

	MSG_SERVER_AND_CLIENT_COMMON_BEGIN = 100,  // server and client common msg , beyond specail game 
	// login 
	MSG_PLAYER_REGISTER,     // register an account ;
	MSG_PLAYER_CHECK_ACCOUNT,  // check an account is valid ;
	MSG_PLAYER_ENTER_GAME,    // after check , enter game 
	MSG_PLAYER_OTHER_LOGIN,  // more than one place login , prelogin need disconnect ; client recived must disconnect from server
	//MSG_PLAYER_CONTINUE_LOGIN,  // contiune login prize ;
	MSG_PLAYER_BIND_ACCOUNT, //  a quick enter player need to bind a real account and password ;
	MSG_MODIFY_PASSWORD,
	MSG_CREATE_ROLE,
	// player base Data 
	MSG_PLAYER_BASE_DATA = 150,
	MSG_PLAYER_SAVE_BASE_DATA,
	MSG_REQUEST_ROOM_LIST,
	MSG_SHOW_CONTINUE_LOGIN_DLG,
	MSG_GET_CONTINUE_LOGIN_REWARD,
	// modify name and sigure
	MSG_PLAYER_MODIFY_NAME,
	MSG_PLAYER_MODIFY_SIGURE,
	MSG_PLAYER_MODIFY_PHOTO,
	MSG_PLAYER_UPDATE_MONEY,  // USE WHEN OTHER MAIL A GITF  ;
	MSG_PLAYER_MODIFY_SEX,
	MSG_PLAYER_UPDATE_VIP_LEVEL,
	MSG_PLAYER_REQUEST_CHARITY_STATE,
	MSG_PLAYER_GET_CHARITY,

	// slot machine 
	MSG_PLAYER_SLOT_MACHINE, // lao hu ji ;
	// mail module
	MSG_PLAYER_SAVE_MAIL = 200,
	MSG_PLAYER_GET_MAIL_LIST,
	MSG_PLAYER_NEW_MAIL_ARRIVED,
	MSG_PLAYER_RECIEVED_NEW_MAIL,
	MSG_PLAYER_LOOK_MAIL,
	MSG_GAME_SERVER_GET_MAX_MAIL_UID,
	MSG_PLAYER_PROCESSED_MAIL,

	// friend module
	MSG_REQUEST_FRIEND_LIST = 250,  // send to db && send client and game server ;
	MSG_SAVE_FRIEND_LIST,  // send to db 
	MSG_REQUEST_FRIEND_BRIFDATA_LIST, // request friend brifdata , use between DB and Game ;
	MSG_PLAYER_ADD_FRIEND,  // want to add other player 
	MSG_PLAYER_ADD_FRIEND_REPLAY,  // other player replay my request ;
	MSG_PLAYER_BE_ADDED_FRIEND,   // other player want to add me 
	MSG_PLAYER_REPLAY_BE_ADD_FRIEND,  // I replay to other player who want to add me ;
	MSG_PLAYER_SERACH_PEERS, // mo hu search , to add other o be firend ;
	MSG_PLAYER_REQUEST_FRIEND_DETAIL, // get friend detail info ;
	MSG_PLAYER_REQUEST_SEARCH_PEER_DETAIL, // get searched result peer's detail info ;
	MSG_PLAYER_DELETE_FRIEND, // remove friend ;

	// friend invite ;
	MSG_PlAYER_INVITED_FRIEND_TO_JOIN_ROOM,  // invite a friend to join
	MSG_PLAYER_BE_INVITED,   // i were invited by my friend ;
	MSG_PLAYER_REPLAY_BE_INVITED,   // when i were invited by friend, i make a choice , reply;
	MSG_PLAYER_RECIEVED_INVITED_REPLAY, // the player I invited ,replayed me ;
	// item 
	MSG_REQUEST_ITEM_LIST = 350,
	MSG_SAVE_ITEM_LIST,
	MSG_PLAYER_PAWN_ASSERT, //  dian dang zi chan
	MSG_PLAYER_USE_GIFT,
	// rank
	MSG_REQUEST_RANK,
	MSG_REQUEST_RANK_PEER_DETAIL,
	// inform 
	MSG_INFORM_NEW_NOTICES = 450,
	MSG_PLAYER_REQUEST_NOTICE,
	MSG_GLOBAL_BROCAST,
	MSG_PLAYER_SAY_BROCAST,
	// shop 
	MSG_SAVE_SHOP_BUY_RECORD = 520,
	MSG_GET_SHOP_BUY_RECORD,
	MSG_PLAYER_REQUEST_SHOP_LIST,
	MSG_BUY_SHOP_ITEM,
	MSG_PLAYER_RECIEVED_SHOP_ITEM_GIFT,
	// mission 
	MSG_GAME_SERVER_SAVE_MISSION_DATA = 600,
	MSG_GAME_SERVER_GET_MISSION_DATA,
	MSG_PLAYER_REQUEST_MISSION_LIST,
	MSG_PLAYER_NEW_MISSION_FINISHED,
	MSG_PLAYER_REQUEST_MISSION_REWORD,

	// online box 
	MSG_PLAYER_REQUEST_ONLINE_BOX_REWARD,
	MSG_PLAYER_REQUEST_ONLINE_BOX_STATE,

	// room common msg ;
	MSG_ROOM_MSG_BEGIN = 680,
	MSG_ROOM_RET,
	MSG_ROOM_SPEAK,
	MSG_ROOM_OTHER_SPEAK,  
	MSG_ROOM_REQUEST_PEER_DETAIL,
	MSG_ROOM_KICK_PEER,
	MSG_ROOM_OTHER_KICK_PEER,
	MSG_ROOM_EXE_BE_KICKED,
	MSG_ROOM_PROCESSE_KIKED_RESULT,

	MSG_ROOM_ENTER,
	MSG_ROOM_PLAYER_ENTER,  // MSG_ROOM_PLAYER_x means other player actions 
	MSG_PLAYER_FOLLOW_TO_ROOM, // zhui zong pai ju 

	MSG_ROOM_LEAVE,
	MSG_ROOM_PLAYER_LEAVE,
	// private room 
	MSG_PLAYER_CREATE_PRIVATE_ROOM,  // create private Room ;

	// message id for pai jiu 
	MSG_PJ_BEGIN = 800,
	MSG_PJ_ENTER_ROOM,
	MSG_PJ_ACTION_RET,
	MSG_PJ_ROOM_INFO,
	MSG_PJ_WAIT_BET,
	MSG_PJ_BET,
	MSG_PJ_OTHER_BET,
	MSG_PJ_APPLY_BANKER,
	MSG_PJ_OTHER_APPLY_BANKER,
	MSG_PJ_BANKER_CHANGED,
	MSG_PJ_DISTRIBUTE,
	MSG_PJ_BANKER_VIEWCARD,
	MSG_PJ_BANKER_SHOW_CARD,
	MSG_PJ_SHOW_BANKER_CARD,
	MSG_PJ_SETTLEMENT,
	MSG_PJ_SHUFFLE,
	MSG_PJ_APPLY_UNBANKER,
	MSG_PJ_STATE_CHANGED,
	MSG_PJ_BANKER_CHOSE_SHUFFLE,
	MSG_PJ_BANKER_CHOSE_CONTINUE_CANCEL,  // will go on ? 
	MSG_PJ_ROOM_APPLY_BANKER_LIST,
	MSG_PJ_ROOM_RECORD,

	// message id for taxas poker
	MSG_TP_BEGIN = 1000,
	MSG_TP_ROOM_CUR_INFO,
	MSG_TP_DISTRIBUTE,
	MSG_TP_PUBLIC_DISTRIBUTE,
	MSG_TP_PEER_ACTION,
	MSG_TP_PEER_ACTION_RET,
	MSG_TP_OTHER_PEER_ACTION,
	MSG_TP_WAIT_PEER_ACTION,
	MSG_TP_ROUND_END,
	MSG_TP_GAME_RESULT,
	MSG_TP_GAME_RESULT_FINAL,
	MSG_TP_GAME_END_PEER_AUTO_ACTION,
    MSG_TP_TYPE_ENTER,

	// message id for baccarat 
	MSG_BC_BEGIN = 2000,
	MSG_BC_ROOM_INFO,	
	MSG_BC_BET,
	MSG_BC_OTHER_BET,
	MSG_BC_DISTRIBUTE,
	MSG_BC_ADD_CARD,
	MSG_BC_CACULATE,
	MSG_BC_START_BET,
	MSG_BC_START_SHUFFLE,

	// message for robot 
	MSG_ROBOT_ORDER_TO_ENTER_ROOM = 2500,
	MSG_ROBOT_APPLY_TO_LEAVE,
	MSG_ROBOT_CHECK_BIGGIEST,
	MSG_ROBOT_INFORM_IDLE,
	MSG_ROBOT_ADD_MONEY,
	// all room msg above ,

	// golden room 
	MSG_GOLDEN_ROOM_ENTER,
	MSG_GOLDEN_ROOM_LEAVE,
	MSG_GOLDEN_ROOM_INFO,
	MSG_GOLDEN_ROOM_STATE,

	MSG_GOLDEN_ROOM_PLAYER_SHOW_CARD,
	MSG_GOLDEN_ROOM_SHOW_CARD,

	MSG_GOLDEN_ROOM_PLAYER_CHANGE_CARD,
	MSG_GOLDEN_ROOM_CHANGE_CARD,

	MSG_GOLDEN_ROOM_PLAYER_PK_TIMES,
	MSG_GOLDEN_ROOM_PK_TIMES,

	MSG_GOLDEN_ROOM_PLAYER_READY,
	MSG_GOLDEN_ROOM_READY,

	MSG_GOLDEN_ROOM_DISTRIBUTY,
	MSG_GOLDEN_ROOM_INFORM_ACT,
	
	MSG_GOLDEN_ROOM_PLAYER_LOOK,
	MSG_GOLDEN_ROOM_LOOK,
	
	MSG_GOLDEN_ROOM_PLAYER_GIVEUP,
	MSG_GOLDEN_ROOM_GIVEUP,

	MSG_GOLDEN_ROOM_PLAYER_FOLLOW,
	MSG_GOLDEN_ROOM_FOLLOW,

	MSG_GOLDEN_ROOM_PLAYER_ADD,
	MSG_GOLDEN_ROOM_ADD,

	MSG_GOLDEN_ROOM_PLAYER_PK,
	MSG_GOLDEN_ROOM_PK,

	MSG_GOLDEN_ROOM_RESULT
};